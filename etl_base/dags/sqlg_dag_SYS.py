
# -*- coding: utf-8 -*-
# Author        : Jesse Wei
# LastUpdate    : 2021/01/027
# Impact        : DAG generated by SQLG
# Message       : Humanity towards others, we live by sharing. Fear can hold you prisoner, only hope can set you free.

# from __future__ import print_function
import logging
import airflow
import pendulum
from datetime import datetime, timedelta
from airflow.sensors.external_task import ExternalTaskSensor
from airflow.operators.python_operator import PythonOperator
from airflow import models
from airflow.models import Variable
# import sqlg_jobs 
# import sqlg_jobs_PRD


#from acme.operators.dwh_operators import PostgresOperatorWithTemplatedParams
ExternalTaskSensor.ui_color = 'white'
proj_start_date = pendulum.datetime(2021, 1, 1,  tz="Asia/Taipei")



def f_SYS_STS_STG():
    logging.info('Control flow: STAGE status ')


def set_exec_date(ds, **kwargs):
    f_SYS_STS_STG()
    logging.info('Control flow: STAGE status '+kwargs['execution_date'].strftime("%Y%m%d"))
    kwargs['ti'].xcom_push(key='sqlg_execution_date', value=kwargs['execution_date'].strftime("%Y%m%d"))
    Variable.set('sqlg_execution_date', kwargs['execution_date'].strftime("%Y%m%d"))
    Variable.set('END_DT', kwargs['execution_date'].strftime("%Y%m%d"))
    return

args = {
    'owner': 'JESSEWEI',
    'start_date': proj_start_date,
    'provide_context': True
}

tmpl_search_path = Variable.get("sql_path")

D_STG_INIT = airflow.DAG(
    'D_STG_INIT',
    tags=["INIT"],
    # schedule_interval=timedelta(1),
    schedule_interval="0 5 * * *",    
    default_args=args,
    template_searchpath=tmpl_search_path,        
    max_active_runs=1,
    catchup = False)

my_taskid = 'SYS_STS_STG'
SYS_STS_STG = PythonOperator(task_id=my_taskid,
    python_callable=set_exec_date,
    provide_context=True,
    dag=D_STG_INIT
    )

#sqlg_set_exec_date = PythonOperator(
#    task_id='doit',
#    provide_context=True,
#    python_callable=set_exec_date,
#    dag=dag)

#my_taskid = 'D_STG_INITxSYS_STS_STG'                    
#D_STG_INITxSYS_STS_STG = ExternalTaskSensor(
#    task_id=my_taskid,
#    external_dag_id='D_STG_INIT',
#    external_task_id='SYS_STS_STG',
#    execution_delta=None,  # Same day as today
#    )

print("PLN:DEBUG:D_STG_INIT:", D_STG_INIT.latest_execution_date)
