version: '2.1'
services:
    redis:
        image: 'redis:5.0.5'
        # command: redis-server --requirepass redispass

    postgres:
        image: postgres:9.6
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
        ports :
          - 5432:5432            
        # Uncomment these lines to persist data on the local filesystem.
        #     - PGDATA=/var/lib/postgresql/data/pgdata
        # volumes:
        #     - ./pgdata:/var/lib/postgresql/data/pgdata

    webserver:
        image: jessewei/sqlg-airflow:latest
        restart: always
        container_name: air_webserver_1        
        depends_on:
            - postgres
            - redis
        environment:
            - LOAD_EX=n
            # puckel: jE0I0KZbJYegX3VdcKHeWDKTswhYbHj2Ikm0Q-35j_M=
            # jesse: 2Z3KHRDxHCSZPPPyqofDWf-szkZcZPxBnBpj92egJUQ=
            - AIRFLOW__CORE__FERNET_KEY=2Z3KHRDxHCSZPPPyqofDWf-szkZcZPxBnBpj92egJUQ=
            - EXECUTOR=Celery
            - AIRFLOW__CORE__EXECUTOR=CeleryExecutor          
            - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
            - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
            - AIRFLOW__WEBSERVER__RBAC=False               
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
            # - REDIS_PASSWORD=redispass
        volumes:
            - ./dags:/usr/local/airflow/dags
            # Uncomment to include custom plugins
            # - ./plugins:/usr/local/airflow/plugins
        ports:
            - "8081:8080"
        command: webserver
        #healthcheck:
        #    test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
        #    interval: 30s
        #    timeout: 30s
        #    retries: 3

    flower:
        image: jessewei/sqlg-airflow:latest
        restart: always
        depends_on:
            - redis
        environment:
            - EXECUTOR=Celery
            - AIRFLOW__CORE__EXECUTOR=CeleryExecutor          
            # - REDIS_PASSWORD=redispass
        ports:
            - "5555:5555"
        command: flower

    scheduler:
        image: jessewei/sqlg-airflow:latest
        restart: always
        depends_on:
            - webserver
        volumes:
            - ./dags:/usr/local/airflow/dags
            # Uncomment to include custom plugins
            # - ./plugins:/usr/local/airflow/plugins
        environment:
            - LOAD_EX=n
            - AIRFLOW__CORE__FERNET_KEY=2Z3KHRDxHCSZPPPyqofDWf-szkZcZPxBnBpj92egJUQ=
            - EXECUTOR=Celery
            - AIRFLOW__CORE__EXECUTOR=CeleryExecutor          
            - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow     
            - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql+psycopg2://airflow:airflow@postgres:5432/airflow            
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
            # - REDIS_PASSWORD=redispass
        command: scheduler

    worker:
        image: jessewei/sqlg-airflow:latest
        restart: always
        depends_on:
            - scheduler
        volumes:
            - ./dags:/usr/local/airflow/dags
            # Uncomment to include custom plugins
            # - ./plugins:/usr/local/airflow/plugins
        environment:
            - AIRFLOW__CORE__FERNET_KEY=2Z3KHRDxHCSZPPPyqofDWf-szkZcZPxBnBpj92egJUQ=
            - EXECUTOR=Celery
            - AIRFLOW__CORE__EXECUTOR=CeleryExecutor          
            - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
            - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql+psycopg2://airflow:airflow@postgres:5432/airflow            
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
            # - REDIS_PASSWORD=redispass
        command: worker
